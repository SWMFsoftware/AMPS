
#main

SpeciesList=O2,O2PLUS,OPLUS_HIGH,OPLUS_THERMAL 


ErrorLog=error.log
Prefix=AMPS
DiagnosticStream=amps.log !!!screen !!screen, filename 'something like amps.log' 
OutputDirectory=out


DebuggerMode=off !on,off
ForceRepeatableSimulationPath=on ! on,off 

makefile  SOURCES=src
makefile  RUNDIR=run
makefile  MPIRUN=mpirun -np 4
makefile ExternalModules=models/exosphere

ProjectSourceDirectory=srcParticleTracker
TrajectoryIntersectionWithBlockFaces=off !on, off

WorkingSourceDirectory=srcTemp   !. !srcTemp !the location of the code that will be compiled (current directory == ".")
SourceDirectory=src

!ErrorLog=amps_error.log
Prefix=AMPS
!DiagnosticStream=output/PT/amps.log !!!screen !!screen, filename 'something like amps.log'
!OutputDirectory=output/PT

!PT/plots
ErrorLog=PT/amps_error.log
DiagnosticStream=PT
OutputDirectory=PT/plots


DebuggerMode=off !on,off
ForceRepeatableSimulationPath=off ! on,off

StdoutErrorLog=off !on,off -> print out error message on the screen


TimeStepMode=SpeciesGlobalTimeStep !SingleGlobalTimeStep !SingleGlobalTimeStep, SpeciesGlobalTimeStep, SingleLocalTimeStep, SpeciesLocalTimeStep
CouplerMode=swmf !!!ices !!off, ices, swmf

#endmain

#include species.input

#UserDefinitions
  PIC=on ! on, off
  Mesh=on ! on, off
#endUserDefinitions

#mesh
!define _USER_DEFINED_INTERNAL_BOUNDARY_SPHERE_MODE_ _USER_DEFINED_INTERNAL_BOUNDARY_SPHERE_MODE_OFF_
! define _USER_DEFINED_INTERNAL_BOUNDARY_NASTRAN_SURFACE_MODE_ _USER_DEFINED_INTERNAL_BOUNDARY_NASTRAN_SURFACE_MODE_OFF_
#endmesh

#General
  ReferenceInjectionParticleNumber=200
  MaxMeshRefinmentLevel=12
  EnforceRequestedMeshResolution=off !on,off
  InitialSampleLength=10
  TestRunTotalIteration=-1 !set infinite number ot iterations 

  BlockCells=5,5,5
  GhostCells=2,2,2
! CutCellVolumeCalculationMaxRefinmentLevel=1

  NastranSurfaceUserData=on !!!on, off
  ControlParticleInsideNastranSurface=off !!!on,of

  define _PIC_SAMPLING_MODE_  _PIC_MODE_OFF_
  
#endGeneral

#block ../exosphere.pl
  SPICE=off 
  define _TARGET_ _EUROPA_
#endblock



#end
