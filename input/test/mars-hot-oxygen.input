
#main
SpeciesList=O

DebuggerMode=on !on,off
ForceRepeatableSimulationPath=on ! on,off 


makefile  SOURCES=src
makefile  RUNDIR=run
makefile  MPIRUN=mpirun -np 4


makefile ExternalModules=models/exosphere

ProjectSourceDirectory=srcMars 

WorkingSourceDirectory=srcTemp   !. !srcTemp !the location of the code that will be compiled (current directory == ".")
SourceDirectory=src

TrajectoryIntersectionWithBlockFaces=on !on, off 

ErrorLog=PT/amps_error.log
Prefix=AMPS
DiagnosticStream=PT
OutputDirectory=PT/plots
InputDirectory=InputData 

StdoutErrorLog=off !on,off -> print out error message on the screen

TimeStepMode=SpeciesLocalTimeStep !SingleGlobalTimeStep !SingleGlobalTimeStep, SpeciesGlobalTimeStep, SingleLocalTimeStep, SpeciesLocalTimeStep
ParticleWeightMode=SpeciesGlobalParticleWeight !SingleGlobalParticleWeight, SpeciesGlobalParticleWeight, SingleLocalParticleWeight, SpeciesLocalParticleWeight
ParticleWeightCorrectionMode=on !on,off

CouplerMode=off !!!ices !!off, ices, swmf

#endmain

#UserDefinitions
  PIC=on ! on, off
  Mesh=on ! on, off
#endUserDefinitions

#General
  ReferenceInjectionParticleNumber=200
  MaxMeshRefinmentLevel=12
  EnforceRequestedMeshResolution=off !on,off
  InitialSampleLength=10000
  TestRunTotalIteration=50

! ReferenceInjectionParticleNumber=200
! MaxMeshRefinmentLevel=8! 2 !4
! EnforceRequestedMeshResolution=off !on,off

  BlockCells=5,5,5
  GhostCells=2,2,2
! CutCellVolumeCalculationMaxRefinmentLevel=1

  NastranSurfaceUserData=on !!!on, off
  ControlParticleInsideNastranSurface=off !!!on,of

  define _PIC_PHOTOLYTIC_REACTIONS_MODE_ _PIC_PHOTOLYTIC_REACTIONS_MODE_ON_
  define _PIC_PHOTOLYTIC_REACTIONS__TOTAL_LIFETIME_(t0,t1,t2,t3,t4) newMars::TotalLifeTime(t0,t1,t2,t3,t4)
  define _PIC_PHOTOLYTIC_REACTIONS__REACTION_PROCESSOR_(p,newFirstCellParticle,node) newMars::PhotochemicalModelProcessor(p,newFirstCellParticle,node)

  !define _PIC_PHOTOLYTIC_REACTIONS_MODE_ _PIC_PHOTOLYTIC_REACTIONS_MODE_ON_
  !define _PIC_PHOTOLYTIC_REACTIONS__TOTAL_LIFETIME_(t0,t1,t2,t3,t4) Exosphere::ChemicalModel::TotalLifeTime(t0,t1,t2,t3,t4)
  !define _PIC_PHOTOLYTIC_REACTIONS__REACTION_PROCESSOR_(p,newFirstCellParticle,node) Exosphere::ChemicalModel::PhotochemicalModelProcessor(p,newFirstCellParticle,node)


  define _PIC_BACKGROUND_ATMOSPHERE_MODE_ _PIC_BACKGROUND_ATMOSPHERE_MODE__ON_
  !define _PIC_BACKGROUND_ATMOSPHERE_COLLISION_VELOCITY_REDISTRIBUTION_ _PIC_BACKGROUND_ATMOSPHERE_COLLISION_VELOCITY_REDISTRIBUTION__ISOTROPIC_
  define _PIC_BACKGROUND_ATMOSPHERE_COLLISION_VELOCITY_REDISTRIBUTION_ _PIC_BACKGROUND_ATMOSPHERE_COLLISION_VELOCITY_REDISTRIBUTION__USER_DEFINED_
  !define _BACKGROUND_ATMOSPHERE_COLLISION_CROSS_SECTION_ _BACKGROUND_ATMOSPHERE_COLLISION_CROSS_SECTION__HARD_SPHERE_
  define _BACKGROUND_ATMOSPHERE_COLLISION_CROSS_SECTION_ _BACKGROUND_ATMOSPHERE_COLLISION_CROSS_SECTION__FORWARD_SCATTERING_

  define _HotCarbon_Source_Reaction_ _HotCarbon_Source_Reaction__Photodissociation_CO_  
 ! define _HotCarbon_Source_Reaction_ _HotCarbon_Source_Reaction__Dissociative_Recombination_COp_  
 
  define _THERMALIZED_PARTICLE_REMOVE_CRITERION_ _THERMALIZED_PARTICLE_REMOVE_CRITERION__LOCAL_BACKGROUND_THERMAL_SPEED_

  !the volume injection of the particles and the type of injection of model particles into a cell
  define _PIC_VOLUME_PARTICLE_INJECTION_MODE_ _PIC_VOLUME_PARTICLE_INJECTION_MODE__ON_

  !the mode of volume injection
  define _PIC_VOLUME_PARTICLE_INJECTION__INJECTION_MODE_  _PIC_VOLUME_PARTICLE_INJECTION__INJECTION_MODE__RATE_DEPENDENT_

  !the distriburion of the collision frequency in a cell
  define _PIC_BACKGROUND_ATMOSPHERE_COLLISION_FREQ_MODE_ _PIC_BACKGROUND_ATMOSPHERE_COLLISION_FREQ_MODE__LOCAL_BACKGROUND_DENSITY_

  !the model for the baclground atmosphere
  !define _MARS_BACKGROUND_ATMOSPHERE_MODEL_ _MARS_BACKGROUND_ATMOSPHERE_MODEL__FOX_
  define _MARS_BACKGROUND_ATMOSPHERE_MODEL_ _MARS_BACKGROUND_ATMOSPHERE_MODEL__MTGCM_

  !the mode of counting the escaping particles:
  define _MARS_ESCAPE_PARTICLES_COUNTING_MODE_ _MARS_ESCAPE_PARTICLES_COUNTING_MODE__ESCAPE_SPEED_

  !define _PIC_DYNAMIC_LOAD_BALANCING_MODE_  _PIC_DYNAMIC_LOAD_BALANCING_PARTICLE_NUMBER_
  define _PIC_DYNAMIC_LOAD_BALANCING_MODE_ _PIC_DYNAMIC_LOAD_BALANCING_EXECUTION_TIME_

  define _PIC_DEBUGGER_MODE_ _PIC_DEBUGGER_MODE_ON_

  define _PIC_PARTICLE_MOVER__TOTAL_PARTICLE_ACCELERATION_(acclMiddle,spec,ptr,xMiddle,vMiddle,middleNode) newMars::TotalParticleAcceleration(acclMiddle,spec,ptr,xMiddle,vMiddle,middleNode) 
  define _PIC_USER_DEFING_PARTICLE_SAMPLING_(tempParticleData,LocalParticleWeight,tempSamplingBuffer,s) newMars::SampleParticleData(tempParticleData,LocalParticleWeight,tempSamplingBuffer,s) 

  
#endGeneral


#include species.input

#BackgroundSpecies
  BackgroundSpecies=on !!on,off

  SpeciesList=O,CO2,N2,CO
  CollisionMode=on !on,off

  CollisionCrossSection= function \\ !!!const \\ !const -> hard sphere, function -> the name of the user-defined function that calculates cross section with the background species
    FunctionName=GetCollisionCrossSectionBackgoundAtmosphereParticle1 \\
    const(C,CO2)=3e-19 \\
    const(C,O)=3e-19

  CollisionScatteringAngle=function \\ !isotropic \\ !isotripic -> isotropic distribution of the angle, function -> the name of the function that distribute the scattering angle
    FunctionName=UserDefinedVelocityScatteringAngle1

  InjectConditionBackgroundParticle=on 
  RemoveConditionModelParticle=on 




#endBackgroundSpecies


#block ../exosphere.pl
  define _TARGET_ _MARS_

  SPICE=off 
  addPhysicalModelHeader=Mars.h

  
#endblock

#block ../mars.pl !process settings of the mars module

!Case=MGITM_AEQUMIN !MTGCM_equinox_SL
Case=MTGCM_equinox_SL

#endblock

#end
