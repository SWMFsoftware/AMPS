//definitions of macros that are used as serrings of AMPS
//$Id$

#ifndef _PIC_GLOBAL_DEFINITIONS_H_
#define _PIC_GLOBAL_DEFINITIONS_H_

#include "picGlobalDefinitions.dfn"

//the dimention of the problem 
#define DIM    3
#define _SIMULATION_TIME_STEP_MODE_ _SPECIES_DEPENDENT_LOCAL_TIME_STEP_
//#define _SIMULATION_TIME_STEP_MODE_ _SPECIES_DEPENDENT_GLOBAL_TIME_STEP_

//#define _SIMULATION_PARTICLE_WEIGHT_MODE_ _SPECIES_DEPENDENT_LOCAL_PARTICLE_WEIGHT_
#define _SIMULATION_PARTICLE_WEIGHT_MODE_ _SPECIES_DEPENDENT_GLOBAL_PARTICLE_WEIGHT_

// SET OF OPTIONAL PARAMETERS CARRIED BY A PARTICLE
//-----------------------------------------------------------------------------
// below is the list of all parameters that can be carried by a particle;
// all are turned off by default
//-----------------------------------------------------------------------------
// Optional parameter: the individual particle's weight corection
#define _USE_WEIGHT_CORRECTION_ _PIC_MODE_OFF_
// Optional parameter: dust grain mass
#define _USE_DUST_GRAIN_MASS_   _PIC_MODE_OFF_
// Optional parameter: dust grain radius
#define _USE_DUST_GRAIN_RADIUS_ _PIC_MODE_OFF_
// Optional parameter: dust grain charge
#define _USE_DUST_GRAIN_CHARGE_ _PIC_MODE_OFF_
// Optional parameter: magnetic moment of a particle
#define _USE_MAGNETIC_MOMENT_   _PIC_MODE_OFF_
// Optional parameter: the number of the face where the particle was injected
#define _USE_SAVE_INJECTION_FACE_ _PIC_MODE_OFF_
// Optional parameter:the initial value of the particle total weight over the value of the local time step
#define _USE_SAVE_PARTICLE_WEIGHT_OVER_LOCAL_TIME_STEP_ _PIC_MODE_OFF_
// Optional parameter: field line id
#define _USE_FIELD_LINE_ID_     _PIC_MODE_OFF_
// Optional parameter: coordinate along field line
#define _USE_FIELD_LINE_COORD_  _PIC_MODE_OFF_
//-----------------------------------------------------------------------------


//define the sampling model: in a regular case where the code is used for particle simulations the _PIC_SAMPLING_MODE_ is _PIC_MODE_ON_. 
//When the code is used for 'particle tracking' ONLY the value of _PIC_SAMPLING_MODE_ need to be _PIC_MODE_OFF_
#define _PIC_SAMPLING_MODE_ _PIC_MODE_ON_

//define the partile-tracking mode: if _PIC_PARTICLE_TRACKER_MODE is _PIC_MODE_ON_ than AMPS accumulates particle trajecotries and outpur them into a file; default value is _PIC_MODE_OFF_
#define _PIC_PARTICLE_TRACKER_MODE_ _PIC_MODE_OFF_
#define _PIC_PARTICLE_TRACKER__TRAJECTORY_TIME_STAMP_MODE_ _PIC_MODE_OFF_ 
#define _PIC_PARTICLE_TRACKER__TRACKING_CONDITION_(x,v,spec,ParticleData) TrajectoryTrackingCondition_default(x,v, spec,ParticleData)
#define _PIC_PARTICLE_TRACKER__TRAJECTORY_OUTPUT_MODE_ _PIC_PARTICLE_TRACKER__TRAJECTORY_OUTPUT_MODE__ENTIRE_TRAJECTORY_ 

#define _PIC_PARTICLE_TRACKER__RESTART_LOADED_PARTICLES__APPLY_TRACKING_CONDITION_MODE_  _PIC_MODE_OFF_

//stop recoding of the particle trajectory point data when the total number of the particles trajectories reaches it maximum alloew value
//that is important when trajectories are used for calcualting of the gas/dust densities 
#define _PIC_PARTICLE_TRACKER__STOP_RECORDING_TRAJECTORY_POINTS_WHEN_TRAJECTORY_NUMBER_REACHES_MAXIMUM_VALUE__MODE_ _PIC_MODE_OFF_

//delay beginig of the particle trajectory tracking
#define _PIC_PARTICLE_TRACKER__BEGIN_TRACKING_FILE_OUTPUT_NUMBER_ 0

//save the face number where a particle is originated
#define _PIC_PARTICLE_TRACKER__INJECTION_FACE_MODE_ _PIC_MODE_OFF_

//save the quantaty Total Particle Weight over the Local Time Step -> the rate of the material injection associated with a given particle
#define _PIC_PARTICLE_TRACKER__PARTICLE_WEIGHT_OVER_LOCAL_TIME_STEP_MODE_ _PIC_MODE_OFF_

/* _PIC_PARTICLE_TRACKER__TRACKING_CONDITION_MODE__DYNAMICS_ and _PIC_PARTICLE_TRACKER__TRACKING_CONDITION_MODE__CHEMISTRY_ are used when it is needed to 
apply the particle trajectory tracking condition after the particle already has started its motion. The first is used after chemicsl reactions and the latter 
at the end of each time step
*/  

#define _PIC_PARTICLE_TRACKER__TRACKING_CONDITION_MODE__DYNAMICS_   _PIC_MODE_OFF_
#define _PIC_PARTICLE_TRACKER__TRACKING_CONDITION_MODE__CHEMISTRY_  _PIC_MODE_OFF_

//create the trajectory output file during the run-time
#define _PIC_PARTICLE_TRACKER__RUNTIME_OUTPUT_ _PIC_MODE_ON_

//the type of the stencil that is used for interpolating of the models cell centered data onto cell corners
#define _PIC_OUTPUT__CELL_CORNER_INTERPOLATION_STENCIL_MODE_ _PIC_OUTPUT__CELL_CORNER_INTERPOLATION_STENCIL_MODE__DEFAULT_ 

//output macroscopic particle drift velocity
#define _PIC_OUTPUT__DRIFT_VELOCITY__MODE_ _PIC_MODE_OFF_


//the maximum length of the strings
#define _MAX_STRING_LENGTH_PIC_  2000

//user-defined processing functions for processing of the model particles 
#define _PIC_USER_PARTICLE_PROCESSING__MODE_  _PIC_MODE_OFF_
#define _PIC_USER_PARTICLE_PROCESSING__FUNCTION_(ptr,FirstParticleCell,node)   PIC::UserParticleProcessing::Processing_default(ptr,FirstParticleCell,node)

//debugger mode
#define _PIC_DEBUGGER_MODE_ _PIC_DEBUGGER_MODE_ON_
#define _PIC_DEBUGGER_MODE__MOVER__CALCULATED_PARTICLE_COORDINATES_ _PIC_DEBUGGER_MODE_OFF_
#define _PIC_DEBUGGER_MODE__SAMPLING__PARTICLE_COORDINATES_ _PIC_DEBUGGER_MODE_OFF_
#define _PIC_DEBUGGER_MODE__CHECK_FINITE_NUMBER_ _PIC_DEBUGGER_MODE_OFF_
#define _PIC_DEBUGGER_MODE__VARIABLE_VALUE_RANGE_CHECK_  _PIC_DEBUGGER_MODE__VARIABLE_VALUE_RANGE_CHECK_OFF_
#define _PIC_DEBUGGER_MODE__SAMPLING_BUFFER_VALUE_RANGE_CHECK_  _PIC_DEBUGGER_MODE__VARIABLE_VALUE_RANGE_CHECK_OFF_

//save particle data into a data file for debugging purposes
#define _PIC_DEBUGGER__SAVE_DATA_STREAM_MODE_ _PIC_MODE_OFF_

//individual particles' weight
#define _INDIVIDUAL_PARTICLE_WEIGHT_MODE_  _INDIVIDUAL_PARTICLE_WEIGHT_ON_ 


//accounting for force acting upon on a particle when integrate the particle trajectory; 
#define _PIC_PARTICLE_MOVER__FORCE_INTEGRTAION_MODE_ _PIC_PARTICLE_MOVER__FORCE_INTEGRTAION_MODE__ON_
#define _PIC_PARTICLE_MOVER__GENERIC_TRANSFORMATION_INDICATOR_(xMiddle,vMiddle,spec,ptr,ParticleData,dtMin,TransformationTimeStepLimitFlag,startNode) _PIC_GENERIC_PARTICLE_TRANSFORMATION_MODE_OFF_;
#define _PIC_PARTICLE_MOVER__BORIS_SPLIT_ACCELERATION_(accl,rotation,spec,ptr,x,v,startNode) BorisSplitAcceleration_default(accl,rotation,spec,ptr,x,v,startNode);
#define _PIC_PARTICLE_MOVER__GUIDING_CENTER_MOTION_(Vguide,ForceParal,AbsB,BDirection,PParal,spec,ptr,x,v,startNode) GuidingCenterMotion_default(Vguide,ForceParal,AbsB,BDirection,PParal,spec,ptr,x,v,startNode);

#define _PIC_PARTICLE_MOVER__TOTAL_PARTICLE_ACCELERATION_(accl,spec,ptr,x,v,startNode) TotalParticleAcceleration_default(accl,spec,ptr,x,v,startNode);
#define _PIC_PARTICLE_MOVER__GENERIC_TRANSFORMATION_PROCESSOR_(xinit,x,v,spec,ptr,ParticleData,dt,startNode) _GENERIC_PARTICLE_TRANSFORMATION_CODE__TRANSFORMATION_OCCURED_;
#define _PIC_PARTICLE_MOVER__MOVE_PARTICLE_TIME_STEP_(ptr,LocalTimeStep,node) PIC::Mover::UniformWeight_UniformTimeStep_noForce_TraceTrajectory_SecondOrder(ptr,LocalTimeStep,node);

#define _PIC_PARTICLE_MOVER__MOVE_PARTICLE_BOUNDARY_INJECTION_(ptr,LocalTimeStep,node,FirstBoundaryFlag) PIC::Mover::UniformWeight_UniformTimeStep_noForce_TraceTrajectory_BoundaryInjection_SecondOrder(ptr,LocalTimeStep,node,FirstBoundaryFlag);
#define _PIC_PARTICLE_MOVER__MOVE_PARTICLE_BOUNDARY_INJECTION_FACE_(ptr,LocalTimeStep,node,FirstBoundaryFlag,InjectionFace) PIC::Mover::UniformWeight_UniformTimeStep_noForce_TraceTrajectory_BoundaryInjection_SecondOrder(ptr,LocalTimeStep,node,FirstBoundaryFlag,InjectionFace);


//accounting for relativistic effects
#define _PIC_PARTICLE_MOVER__RELATIVITY_MODE_ _PIC_MODE_OFF_


//sampling the distribution function
#define _SAMPLING_DISTRIBUTION_FUNCTION_MODE_ _SAMPLING_DISTRIBUTION_FUNCTION_ON_

//the mode of the parallel load balancing 
#define _PIC_DYNAMIC_LOAD_BALANCING_MODE_ _PIC_DYNAMIC_LOAD_BALANCING_EXECUTION_TIME_
#define _PIC_DYNAMIC_LOAD_BALANCING__MIN_ITERATION_BETWEEN_LOAD_REBALANCING_   50

#define _PIC_EMERGENCY_LOAD_REBALANCING_MODE_ _PIC_MODE_ON_
#define _PIC_SAMPLING_BREAK_LOAD_REBALANCING_MODE_ _PIC_MODE_ON_

//the number of the iteration, and the time interval between output of the run-time statistcs
#define _PIC_RUNTIME_STAT_OUTPUT__MIN_ITERATION_NUMBER_     5
#define _PIC_RUNTIME_STAT_OUTPUT__MAX_ITERATION_NUMBER_   500
#define _PIC_RUNTIME_STAT_OUTPUT__TIME_INTERVAL_          120

//the modes of using the ICES
#define _PIC_ICES_SWMF_MODE_ _PIC_ICES_MODE_ON_
#define _PIC_ICES_DSMC_MODE_ _PIC_ICES_MODE_OFF_

//particle transformation, photolytic reactions
#define _PIC_PHOTOLYTIC_REACTIONS_MODE_ _PIC_PHOTOLYTIC_REACTIONS_MODE_OFF_
#define _PIC_GENERIC_PARTICLE_TRANSFORMATION_MODE_ _PIC_GENERIC_PARTICLE_TRANSFORMATION_MODE_OFF_

//the default procedure for calcualtion of the lifitime for the photolytic processes
#define _PIC_PHOTOLYTIC_REACTIONS__TOTAL_LIFETIME_(x,spec,ptr,flag,node) TotalLifeTime_default(x,spec,ptr,flag,node);

//the default procedure for processing the photolytic reactions
#define _PIC_PHOTOLYTIC_REACTIONS__REACTION_PROCESSOR_(ptr,FirstParticleCell,node) PIC::ChemicalReactions::PhotolyticReactions::PhotolyticReactionProcessor_default(ptr,FirstParticleCell,node);

//sampling of the particle data
#define _PIC_SAMPLE_PARTICLE_DATA_MODE_  _PIC_SAMPLE_PARTICLE_DATA_MODE__BETWEEN_ITERATIONS_

//sample normal and tangential kinetic temperature 
#define _PIC_SAMPLE__PARALLEL_TANGENTIAL_TEMPERATURE__MODE_ _PIC_SAMPLE__PARALLEL_TANGENTIAL_TEMPERATURE__MODE__CONSTANT_DIRECTION_ORIGIN_

//the default mode for the backgound atmosphere models
#define _PIC_BACKGROUND_ATMOSPHERE_MODE_ _PIC_BACKGROUND_ATMOSPHERE_MODE__OFF_
#define _PIC_BACKGROUND_ATMOSPHERE__LOAD_USER_DEFINITION__MODE_ _PIC_MODE_OFF_
#define _PIC_BACKGROUND_ATMOSPHERE__UDER_DEFINITION_ "UserDefinition.PIC.BackgroundAtmosphere.h"
#define _PIC_BACKGROUND_ATMOSPHERE__BACKGROUND_PARTICLE_ACCEPTANCE_MODE_ _PIC_MODE_ON_
#define _PIC_BACKGROUND_ATMOSPHERE__MODEL_PARTICLE_REMOVAL_MODE_  _PIC_MODE_ON_

//collision processor used in the background atmosphere model
#define _PIC_BACKGROUND_ATMOSPHERE__COLLISION_MODEL_ _PIC_BACKGROUND_ATMOSPHERE__COLLISION_MODEL__PARTICLE_COLLISIONS_

//the cross section type in the background atmosphere model
#define _PIC_BACKGROUND_ATMOSPHERE_COLLISION_VELOCITY_REDISTRIBUTION_ _PIC_BACKGROUND_ATMOSPHERE_COLLISION_VELOCITY_REDISTRIBUTION__ISOTROPIC_    

//allow to load the user defined file with the solver setup parameters
#ifndef _PIC_USER_DEFINITION_MODE_
#define _PIC_USER_DEFINITION_MODE_ _PIC_USER_DEFINITION_MODE__DISABLED_
#endif

//the volume injection of the particles and the type of injection of model particles into a cell
#define _PIC_VOLUME_PARTICLE_INJECTION_MODE_ _PIC_VOLUME_PARTICLE_INJECTION_MODE__OFF_
#define _PIC_VOLUME_PARTICLE_INJECTION__INJECTION_MODE_ _PIC_VOLUME_PARTICLE_INJECTION__INJECTION_MODE__UNIFORM_

//collisions of model particles with the background atmosphere 
#define _PIC_BACKGROUND_ATMOSPHERE_COLLISION_FREQ_MODE_ _PIC_BACKGROUND_ATMOSPHERE_COLLISION_FREQ_MODE__UNIFORM_

//the model of the electrically charged dust
#define _PIC_MODEL__DUST__MODE_ _PIC_MODEL__DUST__MODE__OFF_
#define _PIC_MODEL__DUST__ELECTRIC_CHARGE_MODE_ _PIC_MODEL__DUST__ELECTRIC_CHARGE_MODE__OFF_

//the build in injection dust model
#define _PIC_MODEL__DUST__INJECTION_MODEL__MODE_  _PIC_MODEL__DUST__INJECTION_MODEL__MODE__OFF_ 

//adjust the dust particle in the velocity groups
#define _PIC_MODEL__DUST__ADJUST_VELOCITY_GROUP__MODE_ _PIC_MODE_OFF_

//include the user defined headers for the physical models
#ifndef _PIC__USER_DEFINED__USER_PHYSICAL_MODEL__HEADER_LIST_MODE_
#define _PIC__USER_DEFINED__USER_PHYSICAL_MODEL__HEADER_LIST_MODE_ _PIC__USER_DEFINED__USER_PHYSICAL_MODEL__HEADER_LIST_MODE__OFF_
#endif

//allow prefetch of memory buffers
#define _PIC_MEMORY_PREFETCH_MODE_ _PIC_MEMORY_PREFETCH_MODE__OFF_
#define _PIC_MEMORY_PREFETCH__CHACHE_LINE_ 64

//execute user defined MPI data exchange function after the syncronizatino point at the particle exchange routine
#define _PIC__USER_DEFINED__MPI_MODEL_DATA_EXCHANGE_MODE_ _PIC__USER_DEFINED__MPI_MODEL_DATA_EXCHANGE_MODE__OFF_ 

//in case OpenMP is used: set individual particles, cells, or blocks to separate processors
#define _PIC__OPENMP_THREAD_SPLIT_MODE_ _PIC__OPENMP_THREAD_SPLIT_MODE__BLOCKS_    
#define _PIC__OPENMP_THREAD_SPLIT_MODE_PARTICLE__PARTICLE_BUFFER_LENGTH_  1000  

//call a user defined function after outputing of the data file to clean all user's sampling buffers
#define _PIC__USER_DEFINED__CLEAN_SAMPLING_DATA__MODE_ _PIC__USER_DEFINED__CLEAN_SAMPLING_DATA__MODE__OFF_ 

//allow the load the user-defined difinition of macro defining the symbolic description of the species used in the simulation 
#define _PIC__USER_DEFINED__LOAD_SPECIES_MACRO__MODE_ _PIC__USER_DEFINED__LOAD_SPECIES_MACRO__MODE__OFF_ 

//the mode of particle collision model
#define _PIC__PARTICLE_COLLISION_MODEL__MODE_ _PIC_MODE_OFF_
#define _PIC__PARTICLE_COLLISION_MODEL_ _PIC__PARTICLE_COLLISION_MODEL__NTC_
#define _PIC__PARTICLE_COLLISION_MODEL__CROSS_SECTION_  _PIC__PARTICLE_COLLISION_MODEL__CROSS_SECTION__HS_

//the functions that are used for the user defined collision models
#define _PIC__PARTICLE_COLLISION_MODEL__MEAN_CR_SIGMA_FUNCTION_    0
#define _PIC__PARTICLE_COLLISION_MODEL__SIGMA_    0

//sample collision frequentcy by the particle collision model
#define _PIC__PARTICLE_COLLISION_MODEL__SAMPLE_COLLISION_FREQUENTCY_MODE__ _PIC_MODE_ON_

//default setting for modeling of the relaxation of the internal degrees of freedom
#define _PIC_INTERNAL_DEGREES_OF_FREEDOM__VT_RELAXATION_MODE_  _PIC_MODE_OFF_
#define _PIC_INTERNAL_DEGREES_OF_FREEDOM__VV_RELAXATION_MODE_  _PIC_MODE_OFF_
#define _PIC_INTERNAL_DEGREES_OF_FREEDOM__TR_RELAXATION_MODE_  _PIC_MODE_ON_

//default setting of the internal degrees of freedom model
#define _PIC_INTERNAL_DEGREES_OF_FREEDOM_MODE_ _PIC_MODE_OFF_
#define _PIC_INTERNAL_DEGREES_OF_FREEDOM_MODEL_ _PIC_INTERNAL_DEGREES_OF_FREEDOM_MODEL__LB_

//default setting of the coupler mode
#define _PIC_COUPLER_MODE_    _PIC_COUPLER_MODE__OFF_ 

//default background file reader
#define _PIC_COUPLER_DATAFILE_READER_MODE_ _PIC_COUPLER_DATAFILE_READER_MODE__TECPLOT_

//the interpolation scheme that is used in coupler
#define _PIC_COUPLER__INTERPOLATION_MODE_ _PIC_COUPLER__INTERPOLATION_MODE__CELL_CENTERED_CONSTANT_   

//the default value of the cell-centered linear interpolation routine
#define _PIC_CELL_CENTERED_LINEAR_INTERPOLATION_ROUTINE_ _PIC_CELL_CENTERED_LINEAR_INTERPOLATION_ROUTINE__AMPS_

//check intersection with the block's boundaries when integrate the equation of motion (used together with the local time stepping and local weight for steady-state problems)
#define _PIC__PARTICLE_MOVER__CHECK_BLOCK_FACE_INTERSECTION__MODE_ _PIC_MODE_OFF_

//default setting for the radiative cooling
#define _PIC_MODEL__RADIATIVECOOLING__MODE_  _PIC_MODEL__RADIATIVECOOLING__MODE__OFF_

//check whether a particle is inside the surface described by a NASTRAN surface mesh after particle motion
#define _PIC_CONTROL_PARTICLE_INSIDE_NASTRAN_SURFACE_ _PIC_MODE_OFF_

//default setting for the radial velocity mode
#define _PIC_MODEL__RADIAL_VELOCITY_MODE_ _PIC_MODEL__RADIAL_VELOCITY_MODE__OFF_

//default sampling model for the particle velocity
#define _PIC_VELOCITY_DISTRIBUTION_SAMPLING_MODE_ _PIC_MODE_OFF_
//default sampling model for the particle pitch angle
#define _PIC_PITCH_ANGLE_DISTRIBUTION_SAMPLING_MODE_ _PIC_MODE_OFF_

//default value for sampling of the energy distribution function
#define _PIC_ENERGY_DISTRIBUTION_SAMPLING_RELATIVISTIC_MODE_ _PIC_MODE_OFF_

//the mode of the output of the AMPS' macroscopic data file 
#define _PIC_OUTPUT_MACROSCOPIC_FLOW_DATA_MODE_ _PIC_OUTPUT_MACROSCOPIC_FLOW_DATA_MODE__TECPLOT_ASCII_ 

//run AMPS just to read saved sampling data restart file
#define _PIC_RECOVER_SAMPLING_DATA_RESTART_FILE__MODE_ _PIC_RECOVER_SAMPLING_DATA_RESTART_FILE__MODE_OFF_
#define _PIC_RECOVER_SAMPLING_DATA_RESTART_FILE__EXECUTION_MODE_  _PIC_RECOVER_SAMPLING_DATA_RESTART_FILE__EXECUTION_MODE__STOP_

//read/save the particle restart data
#define _PIC_READ_PARTICLE_DATA_RESTART_FILE__MODE_ _PIC_READ_PARTICLE_DATA_RESTART_FILE__MODE_OFF_
#define _PIC_AUTOSAVE_PARTICLE_DATA_RESTART_FILE__MODE_ _PIC_AUTOSAVE_PARTICLE_DATA_RESTART_FILE__MODE_OFF_

//by default the glabal simulation time counter is off. the time counter representes the global physical simulation time. it can be 'on' only when a global-single-species or
//global-species-dependent (with only one species in the simulation) time stepping are used
#define _PIC_GLOBAL_TIME_COUNTER_MODE_ _PIC_MODE_OFF_

//_PIC_NIGHTLY_TEST_MODE_ = _PIC_MODE_ON_/_PIC_MODE_OFF_ -> determines whether the code is used in the test mode for the nightly test. if _PIC_NIGHTLY_TEST_MODE_==_PIC_MODE_ON_ than
//the model run is limited by a "small" number of the iteractions, and the particle averaged data is output at the end of the run for comparing with the reference solution. 
//by default _PIC_NIGHTLY_TEST_MODE_ == _PIC_MODE_OFF_ 
#ifndef _PIC_NIGHTLY_TEST_MODE_
#define _PIC_NIGHTLY_TEST_MODE_ _PIC_MODE_OFF_
#endif

//the number of iteratoin performed in a test
#define _PIC_NIGHTLY_TEST__TOTAL_ITERATION_NUMBER_    700

//reduce resolution when performing the nightly tests 
#define _PIC_NIGHTLY_TEST__REDUCE_RESOLUTION_MODE_ _PIC_MODE_OFF_

//the grid resolution mutiplier used to reduce the runtime during the nightly tests
#define _PIC_NIGHTLY_TEST__GRID_RESOLUTION_MULTIPLIER_  2.0 

//the grid resolution floor that is used in the nightly test to reduce the runtime during the nightly tests
//if negative -> there is no floor value; the value can be reset in the input file 
#define _PIC_NIGHTLY_TEST__GRID_RESOLUTION_FLOOR_VALUE_  -1.0

//the spatial symmetry mode
#define _PIC_SYMMETRY_MODE_ _PIC_SYMMETRY_MODE__NONE_

//integrator mode
#define _PIC_MOVER_INTEGRATOR_MODE_ _PIC_MOVER_INTEGRATOR_MODE__DIRECT_

//sample output mode
#define _PIC_SAMPLE_OUTPUT_MODE_  _PIC_SAMPLE_OUTPUT_MODE_ITERATION_NUMBER_

//ideal MHD mode
#define _PIC__IDEAL_MHD_MODE_ _PIC_MODE_ON_

//time interpolation mode
#define _PIC_DATAFILE__TIME_INTERPOLATION_MODE_ _PIC_MODE_OFF_

//read B field from datafile
#define _PIC_COUPLER_DATAFILE_READ_B_FIELD_ _PIC_MODE_ON_

//calc E field from B
#define _PIC_COUPLER_DATAFILE_CALC_E_FIELD_ _PIC_MODE_ON_

// field line mode
#define _PIC_FIELD_LINE_MODE_ _PIC_MODE_OFF_

//function for particle injection onto field lines
#define _PIC_INJECT_PARTICLE_ONTO_FIELD_LINE_(spec) PIC::FieldLine::InjectParticle_default(spec)

//function to set fieldline segments weights
#define _FIELDLINE_SEGMENT_WEIGHT_(w, Segment) PIC::FieldLine::FieldLineWeight_Uniform(w, Segment)

//errors in the particle mover: stop execution or delete particle and sample of the particle deleting rate due to the error
#define _PIC_MOVER__UNKNOWN_ERROR_IN_PARTICLE_MOTION__STOP_EXECUTION_ _PIC_MODE_ON_

//processing of the particle intersection with the domain boundary
#define _PIC_PARTICLE_DOMAIN_BOUNDARY_INTERSECTION_PROCESSING_MODE_ _PIC_PARTICLE_DOMAIN_BOUNDARY_INTERSECTION_PROCESSING_MODE__DELETE_

//Free flow injection boundary mode
#define _PIC_BC__OPEN_FLOW_INJECTION__MODE_  _PIC_BC__OPEN_FLOW_INJECTION__MODE_OFF_

//Periodic boundary conditions mode
#define _PIC_BC__PERIODIC_MODE_ _PIC_BC__PERIODIC_MODE_OFF_  

//include the linear solver functions 
#define _PIC_LINEAR_SOLVER_MODE_ _PIC_MODE_OFF_

// user-defined initilization of particles
#define _PIC_USER_DEFINED_PARTICLE_INITIALIZATION__MODE_ _PIC_MODE_OFF_
#define _PIC_USER_DEFINED_PARTICLE_INITIALIZATION__FUNC_(t1,t2,t3) _DUMMY_(t1,t2,t3)

//the mode of the particle trajectory integration backward in time
#define _PIC_PARTICLE_MOVER__BACKWARD_TIME_INTEGRATION_MODE_  _PIC_PARTICLE_MOVER__BACKWARD_TIME_INTEGRATION_MODE__DISABLED_

//definitions of the field solver 
#define _PIC_FIELD_SOLVER_MODE_ _PIC_FIELD_SOLVER_MODE__OFF_

//input unit for the field solver
#define _PIC_FIELD_SOLVER_INPUT_UNIT_ _PIC_FIELD_SOLVER_INPUT_UNIT_SI_

#endif //_PIC_GLOBAL_DEFINITIONS_H_  
